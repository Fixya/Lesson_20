#include <iostream>
#include <ctime>
#include "Header.h"
using namespace std;
int main() {
	setlocale(LC_ALL, "Rus");
	/*Proc16. Описать функцию Sign(X) целого типа, возвращающую для вещественного числа X следующие значения:
−1, если X < 0; 0, если X = 0; 1, если X > 0.
С помощью этой функции найти значение выражения Sign(A) + Sign(B)
для данных вещественных чисел A и B*/
	/*double a, b;
	cin >> a >> b;
	cout << sign(a) + sign(b);*/

	/*Proc17. Описать функцию RootsCount(A, B, C) целого типа, определяющую количество корней квадратного уравнения 
A·x^2 + B·x + C = 0 (A, B, C —вещественные параметры, A != 0). С ее помощью найти количество корнейдля каждого из трех 
квадратных уравнений с данными коэффициентами.Количество корней определять по значению дискриминанта: D = B^2 − 4·A·C*/
	/*double a, b, c;
	cin >> a >> b >> c;
	cout << rootsCount(a, b, c);*/

	/*Proc18. Описать функцию CircleS(R) вещественного типа, находящую площадь круга радиуса R (R — вещественное). С помощью этой 
функции найти площади трех кругов с данными радиусами. Площадь круга радиуса R вычисляется по формуле S = π·R^2 В качестве значения
π использовать 3.14.*/
	/*double a, b, c;
	cin >> a >> b >> c;
	cout << circleS(a) << ' ' << circleS(b) << ' ' << circleS(c);*/

	/*Proc19. Описать функцию RingS(R1, R2) вещественного типа, находящую площадь кольца, заключенного между двумя окружностями 
с общим центром и радиусами R1 и R2 (R1 и R2 — вещественные, R1 > R2). С ее помощью найти площади трех колец, для которых даны 
внешние и внутренние радиусы. Воспользоваться формулой площади круга радиуса R: S = π·R^2 В качестве значения π использовать 3.14.*/
	/*double a, b, c, d, e, f;
	cin >> a >> b >> c >> d >> e >> f;
	cout << ringS(a, b) << ' ' << ringS(c,d) << ' ' << ringS(e,f);*/

	/*Proc20. Описать функцию triangleP(a, h), находящую периметр равнобедренного треугольника по его основанию a и высоте h, 
проведенной к основанию (a и h — вещественные). С помощью этой функции найти периметры трех треугольников, для которых даны 
основания и высоты. Для нахождения боковой стороны b треугольника использовать теорему Пифагора: b^2 = (a/2)2 + h^2*/
	/*double a, b, c, d, e, f;
	cin >> a >> b >> c >> d >> e >> f;
	cout << triangleP(a, b) << ' ' << triangleP(c, d) << ' ' << triangleP(e, f);*/

	/*Proc21. Описать функцию sumRange(A, B) целого типа, находящую суммувсех целых чисел от A до B включительно (A и B — целые). 
	Если A > B,то функция возвращает 0. С помощью этой функции найти суммы чисел от A до B и от B до C, если даны числа A, B, C.*/
	/*int a, b, c;
	cin >> a >> b >> c;
	cout << sumRange(a, b) << ' ' << sumRange(b, c);*/

}